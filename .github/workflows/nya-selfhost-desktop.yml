name: "Build Desktop application"

on:
  push:
    branches:
      - nya
    tags:
      - "v*"
  pull_request:
    branches:
      - nya

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
            identifier: "macos-aarch64"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
            identifier: "macos-amd64"
          - platform: "ubuntu-20.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
            identifier: "linux"
          - platform: "windows-latest"
            args: ""
            identifier: "windows"

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04' # This must match the platform value defined above.
        run: |
          sudo apt update
          sudo apt install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Prepare dotenv for backend
        run: |
          cp .env.example .env
          cp .env.example ./packages/hoppscotch-backend/.env

      - name: Prepare prisma for windows # It's just not working
        if: matrix.platform == 'windows-latest'
        run: |
          cd ./packages/hoppscotch-backend/
          pnpm install --frozen-lockfile --ignore-scripts
          pnpm exec prisma generate

      - name: Install all dependencies
        run: pnpm install --frozen-lockfile --force

      - name: Prepare GraphQL code
        run: |
          cd ./packages/hoppscotch-selfhost-desktop/
          pnpm gql-codegen

      # If tagName and releaseId are omitted tauri-action will only build the app and won't try to upload any assets.
      - name: Build debug artifacts
        id: buildDebug
        if: "!startsWith(github.event.ref, 'refs/tags/')"
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
          projectPath: "./packages/hoppscotch-selfhost-desktop"
          includeDebug: true

      - name: Upload debug artifacts
        if: "!startsWith(github.event.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.identifier }}
          path: ${{ steps.buildDebug.outputs.artifactPaths }}

      - name: Build release artifacts
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref }}
          releaseName: "Hoppscotch v__VERSION__" # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseBody: "请检视资源列表以下载并安装此版本应用程序。"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          projectPath: "./packages/hoppscotch-selfhost-desktop"
